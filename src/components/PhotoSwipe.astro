---
import photoSwipeLightboxJS from 'photoswipe/lightbox?url'
import photoSwipeCSS from 'photoswipe/style.css?url'
import photoSwipeJS from 'photoswipe?url'
---

<script
  is:inline
  define:vars={{
    photoSwipeCSS,
    photoSwipeLightboxJS,
    photoSwipeJS,
  }}
>
  let lightbox

  function loadCSS(url) {
    const link = document.createElement('link')
    link.rel = 'stylesheet'
    link.href = url
    document.head.appendChild(link)
  }

  async function setupPhotoSwipe() {
    if (lightbox) {
      lightbox.destroy()
      lightbox = null
    }

    const article = document.querySelector('article.heti')
    if (!article) {
      return
    }

    const images = article.getElementsByTagName('img')
    if (images.length === 0) {
      return
    }

    loadCSS(photoSwipeCSS)
    const [{ default: PhotoSwipeLightbox }, pswp] = await Promise.all([
      import(photoSwipeLightboxJS),
      import(photoSwipeJS),
    ])

    lightbox = new PhotoSwipeLightbox({
      gallery: 'article.heti img',
      pswpModule: () => Promise.resolve(pswp),
      bgOpacity: 0.9,
      padding: {
        top: window.innerHeight * 0.1,
        bottom: window.innerHeight * 0.1,
        left: window.innerWidth * 0.073,
        right: window.innerWidth * 0.073,
      },
      zoom: false,
      close: false,
      wheelToZoom: true,
      imageClickAction: 'close',
      tapAction: 'close',
    })

    // 设置图片尺寸
    lightbox.addFilter('domItemData', (itemData, element) => {
      // 设置图片源
      itemData.src = element.src

      // 设置尺寸，回退到窗口大小
      itemData.w = Number(element.naturalWidth ?? window.innerWidth)
      itemData.h = Number(element.naturalHeight ?? window.innerHeight)

      // 设置缩略图源
      itemData.msrc = element.src

      return itemData
    })

    lightbox.init()
  }

  setupPhotoSwipe()
  document.addEventListener('astro:page-load', setupPhotoSwipe)
</script>
