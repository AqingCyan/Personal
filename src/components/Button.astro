---
import ThemeToggleIcon from '@/assets/icons/theme-toggle.svg'
import { themeConfig } from '@/config'

const {
  light: { background: lightMode },
  dark: { background: darkMode },
} = themeConfig.color
---

<div
  class:list={[
    'right-7.25vw top-14.6 absolute flex gap-6 min-[823px]:max-[1024px]:right-[calc(50vw-22rem)]',
    'lg:(fixed w-14rem) top-auto right-[max(5rem,calc(50vw-35rem))] bottom-[min(10.27rem+1.92vw,12rem)]',
  ]}
>
  <!-- Theme Toggle -->
  <button
    id="theme-toggle-button"
    aria-label="Switch light/dark theme"
    class="c-secondary hover:c-primary aspect-square w-4 active:scale-90"
  >
    <ThemeToggleIcon aria-hidden="true" fill="currentColor" />
  </button>
</div>

<script is:inline define:vars={{ lightMode, darkMode }}>
  // 更新主题
  function updateTheme() {
    // 切换网站主题
    document.documentElement.classList.toggle('dark')

    // 获取当前主题
    const isDark = document.documentElement.classList.contains('dark')
    // 更新元主题颜色
    const metaThemeColor = document.head.querySelector('meta[name="theme-color"]')
    metaThemeColor?.setAttribute('content', isDark ? darkMode : lightMode)

    // 在本地存储中更新主题配置
    localStorage.setItem('theme', isDark ? 'dark' : 'light')
    document.dispatchEvent(new Event('theme-changed'))
  }

  // 为按钮绑定点击事件
  function setupThemeToggle() {
    // 定位主题切换按钮
    const themeToggleButton = document.getElementById('theme-toggle-button')
    if (!themeToggleButton) {
      return
    }

    // 为按钮添加点击监听器
    themeToggleButton.addEventListener('click', () => {
      // 如果启用了减少动画或浏览器不支持视图过渡API，直接更新主题
      if (document.documentElement.classList.contains('reduce-motion')) {
        updateTheme()
        return
      }

      // 在动画期间临时添加标记以实现视图过渡并禁用CSS过渡
      document.documentElement.style.setProperty('view-transition-name', 'animation-theme-toggle')
      document.documentElement.setAttribute('data-theme-changing', '')

      // 如果浏览器支持视图过渡API，使用它来更新主题
      const themeTransition = document.startViewTransition(updateTheme)
      // 动画结束后移除标记
      themeTransition.finished.then(() => {
        document.documentElement.style.removeProperty('view-transition-name')
        document.documentElement.removeAttribute('data-theme-changing')
      })
    })
  }

  // 初始化点击事件（首次加载或页面转换时）
  setupThemeToggle()
  document.addEventListener('astro:after-swap', setupThemeToggle)
</script>
