---
import { themeConfig } from '@/config'
import { isPostPage } from '@/utils/page'

interface Props {
  date: Date
  updatedDate?: Date
  minutes: number
}

const { date, updatedDate, minutes } = Astro.props
const format = themeConfig.global.dateFormat
const isPost = isPostPage(Astro.url.pathname)
const timeSpacingClass = isPost ? 'ml-1.75' : 'ml-1.5'

// 根据配置格式化日期
function formatDate(
  date: Date,
  format: 'YYYY-MM-DD' | 'MM-DD-YYYY' | 'DD-MM-YYYY' | 'MONTH DAY YYYY' | 'DAY MONTH YYYY',
) {
  if (format === 'YYYY-MM-DD') {
    return date.toISOString().split('T')[0]
  }

  const options: Intl.DateTimeFormatOptions = {
    year: 'numeric',
    month: format === 'MONTH DAY YYYY' || format === 'DAY MONTH YYYY' ? 'short' : '2-digit',
    day: format === 'MONTH DAY YYYY' || format === 'DAY MONTH YYYY' ? 'numeric' : '2-digit',
  }

  switch (format) {
    // 美式日期格式：04-13-2025
    case 'MM-DD-YYYY':
      return date.toLocaleDateString('en-US', options).replace(/\//g, '-')

    // 欧式日期格式：13-04-2025
    case 'DD-MM-YYYY':
      return date.toLocaleDateString('en-GB', options).replace(/\//g, '-')

    // 美式月份文本格式：Apr 13 2025
    case 'MONTH DAY YYYY':
      return date
        .toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'short',
          day: 'numeric',
        })
        .replace(',', '')

    // 英式月份文本格式：13 Apr 2025
    case 'DAY MONTH YYYY':
      return date
        .toLocaleDateString('en-GB', {
          year: 'numeric',
          month: 'short',
          day: 'numeric',
        })
        .replace(',', '')

    // 默认使用 ISO 格式
    default:
      return date.toISOString().split('T')[0]
  }
}
---

<!-- published date -->
<time datetime={date.toISOString().split('T')[0]}>
  {formatDate(date, format)}
</time>

<!-- updated date -->
{
  updatedDate && (
    <time datetime={updatedDate.toISOString().split('T')[0]} class={timeSpacingClass}>
      updated {formatDate(updatedDate, format)}
    </time>
  )
}

<!-- reading time -->
<span class={timeSpacingClass}>
  {minutes} min
</span>
