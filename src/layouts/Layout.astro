---
import Head from './Head.astro'
import Button from '@/components/Button.astro'
import Navbar from '@/components/Navbar.astro'
import Header from '@/components/Header.astro'
import GsapAnimation from '@/components/GsapAnimation.astro'
import SoundEffect from '@/components/SoundEffect.astro'
import GithubCard from '@/components/GithubCard.astro'
import CodeCopyButton from '@/components/CodeCopyButton.astro'
import PhotoSwipe from '@/components/PhotoSwipe.astro'
import Footer from '@/components/Footer.astro'
import { themeConfig } from '@/config'
import { getPageInfo } from '@/utils/page'
import '@/styles/global.css'
import '@/styles/transition.css'
import '@/styles/font.css'
import '@/styles/markdown.css'
import '@/styles/extend.css'

interface Props {
  postTitle?: string
  postDescription?: string
  postSlug?: string
}

const { postTitle, postDescription, postSlug } = Astro.props
const animationEnabled = !themeConfig.global.reduceMotion
const fontStyle = themeConfig.global.fontStyle === 'serif' ? 'font-serif' : 'font-sans'
const { isPost } = getPageInfo(Astro.url.pathname)
---

<!doctype html>
<html lang="zh-CN" class:list={[fontStyle, { 'scroll-smooth': isPost }]}>
  <Head {postTitle} {postDescription} {postSlug} />
  <body>
    <div
      class="mx-auto max-w-205.848 min-h-vh w-full min-h-dvh"
      p="x-[min(7.25vw,3.731rem)] y-10"
      lg="mx-[max(5.75rem,calc(50vw-34.25rem))] my-20 max-w-[min(calc(75vw-16rem),44rem)] min-h-full p-0"
    >
      <Header />
      <Navbar />
      <main>
        <slot />
      </main>
    </div>
    {animationEnabled && <GsapAnimation />}
    <Button />
    <Footer />
    <SoundEffect />
    <GithubCard />
    <CodeCopyButton />
    <PhotoSwipe />

    <!-- 全局路由跟踪脚本 -->
    <script>
      // 全局路由历史管理
      const ROUTE_HISTORY_KEY = 'retypeset-route-history'
      const MAX_HISTORY_LENGTH = 20

      function getCurrentPagePath(): string {
        return window.location.pathname
      }

      function getRouteHistory(): string[] {
        try {
          const stored = localStorage.getItem(ROUTE_HISTORY_KEY)
          return stored ? JSON.parse(stored) : []
        } catch {
          return []
        }
      }

      function saveRouteHistory(history: string[]): void {
        try {
          localStorage.setItem(ROUTE_HISTORY_KEY, JSON.stringify(history))
        } catch {
          // localStorage 可能不可用，忽略错误
        }
      }

      function addToRouteHistory(path: string): void {
        const history = getRouteHistory()
        const lastPath = history[history.length - 1]

        // 只有当路径真正变化时才记录
        if (path !== lastPath) {
          history.push(path)
          // 限制历史记录长度
          if (history.length > MAX_HISTORY_LENGTH) {
            history.splice(0, history.length - MAX_HISTORY_LENGTH)
          }
          saveRouteHistory(history)
        }
      }

      function initRouteTracking(): void {
        const currentPath = getCurrentPagePath()
        addToRouteHistory(currentPath)
      }

      function handleRouteChange(): void {
        const currentPath = getCurrentPagePath()
        addToRouteHistory(currentPath)
      }

      // 初始化路由跟踪
      initRouteTracking()

      // 监听 Astro 路由变化
      document.addEventListener('astro:after-swap', handleRouteChange)

      // 监听浏览器前进后退
      window.addEventListener('popstate', handleRouteChange)

      // 暴露全局函数供 BackButton 使用
      window.getRouteHistory = getRouteHistory
    </script>
  </body>
</html>
